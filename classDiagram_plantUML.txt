@startuml
skinparam groupInheritance 3
abstract class ЗаявкаРаботника {
#Id ID
#String ФИО
#String Skype
#Date ДатаРождения
#String Гражданство
#String Образование
#String ОСебе
#int ОпытРаботы
#Number НомерТелефона
#String email
#bool ПерсональныеДанные

#String getФИО()
#String getSkype()
#Date getДатаРождения()
#String getГражданство()
#String getОбразование()
#String getОСебе()
#int getОпытРаботы()
#Number getНомерТелефона()
#String getemail()
#bool getПерсональныеДанные()
#void setФИО(String name)
#void setSkype(String skype)
#void setДатаРождения(Date date)
#void setГражданство(String country)
#void setОбразование(String education)
#void setОСебе(String info)
#void setОпытРаботы(int month)
#void setНомерТелефона(Number number)
#void setemail(String email)
#void setПерсональныеДанные(bool mark)
#email_mail ФормированиеПисьма(ЗаявкаРаботника form)
}

class ЗаявкаКопирайтера {
URL[] СсылкиНаСтатьи

ЗаявкаКопирайтера СоздатьЗаявку()
}

class ЗаявкаПсихолога {
String[] МетодыТерапии
bool ПосещениеСупервизий
int ЧасыРаботы

ЗаявкаПсихолога СоздатьЗаявку()
}

class ЗаявкаАдминистратора {

ЗаявкаАдминистратора СоздатьЗаявку()
}

class Пользователь {
#Id ID
#String Логин
-long ХешПароля
#String Пароль
#String ФИО
#Date ДатаРождения
#String Телефон
#String email

#Пользователь НовыйПользователь(String ФИО, Date ДатаРождения, String Телефон, String email, String Логин, String Пароль)
#String getФИО()
#Date getДатаРождения()
#String getТелефон()
#String getEmail()
#void setФИО(String name)
#void setДатаРождения(Date date)
#void setТелефон(String number)
#void setEmail(String email)
#virtual Войти()
}

class Копирайтер {
-String Гражданство
-String Образование
-Статья[] Статьи

-String getГражданство()
-String getОбразование()
-Статья getСтатья(String name)
-void setГражданство(String country)
-void setОбразование(String education)
-Статья СоздатьСтатью()
-void РедактироватьСтатью(Статья article)
}

class Статья {
-Id ID
-String Название
-Копирайтер Автор
-String Текст
-Integer КоличествоПросмотров

+String getНазвание()
+Копирайтер getАвтор()
+String getТекст()
+Integer getКоличество просмотров()
-void setНазвание(String name)
-void setАвтор(Копирайтер author)
-void setТекст(String text)
-void setКоличествоПросмотров(Integer value)
}

class Клиент {
-String Skype
-Календарь Календарь
-Тег[] Теги
-Счет[] Счет
-Сессия[] Сессии

+Клиент РегистрацияКлиента()
-Календарь ПросмотрКалендаря()
-Тег[] Анкетирование()
-String getSkype()
-void setSkype(String Skype)
-void setТеги(Тег[] teg)
-Психолог ВыборСпециалиста(Тег[] tegs)
-void ОплатаЗаписи()
-void ПополнениеСчета()
-Сессия НачатьСессию()
-void ПросмотрЗаписи(Сессия session)
-int getСчет()
-virtual УдалениеАккаунта()
}

class Календарь {
-Id ID
-Id Владелец
-Запись[] Записи
-bool ТипАккаунта

-Календарь НовыйКалендарь(Id Владелец, bool ТипАккаунта)
-Id getВладелец()
-Запись[] getЗаписи()
-Запись getЗапись()
-Запись ЗаписьНаПриемНовыйСпециалист()
-Запись ЗаписьНаПриемСуществующийСпециалист(Id psycho)
-void ОтменаСессии(Сессия session)
-void setЗапись(Запись mark)
-void РедактироватьЗапись(Запись mark)
-void УдалитьЗапись(Запись mark)
}

class Запись {
-Id ID
-Date ДатаСеанса
-Id Клиент
-Id Психолог
-Сессия Сессия
-bool Оплачено

-Запись НоваяЗапись(Date ДатаСеанса, Id Клиент, Id Психолог, bool Оплачено = 0)
-Date getДатаСеанса()
-Id getКлиент()
-Id getПсихолог()
-Сессия getСессия()
-void setДатаСеанса(Date date)
-void setСессия(Сессия session)
-void setОплачено(bool f)
}

enum Теги {
-Тег1
-Тег2
-Тег3
-Тег4
-Тег5
-...
}

class Счет {
-Id ID
-Id Клиент
-double Сумма
-Оплата[] Оплаты

-Оплата ПополнитьСчет()
}

class Отзыв {
-Id ID
-Id Клиент
-Id Психолог
-bool Ответ1
-bool Ответ2

-Отзыв НовыйОтзыв(Str)
-Id getКлиент()
-bool getОтвет1()
-bool getОтвет2()
-void setКлиент(Id ID)
-void setОтвет1(bool answer)
-void setОтвет2(bool answer)
-Заявка ОставитьЗаявку()
-void Завершить()
}

class Оплата {
-Id ID
-Id Запись
-Date
Дата
-double СуммаПлатежа
-bool Состояние

-void ИзменитьСостояние()
-Запись setОплачено(bool f)
}

class Заявка {
-Id ID
-Id Клиент
-Id Психолог
-Id Администратор
-String Текст
-Сессия Сессия
-bool Состояние
-String Ответ

-Заявка НоваяЗаявка(String text)
-Id getКлиент()
-Id getПсихолог()
-Id getАдминистратор()
-String getТекст()
-Сессия getСессия()
-bool getСостояние()
-String getОтвет()
-void setОтвет(String answer)
-void Назад()
}

class Психолог {
-String Гражданство
-String Образование
-String Skype
-String ОСебе
-Integer ОпытРаботы
-Календарь Календарь
-Тег[] Теги
-Сессия[] Сессии

-void ОбновлениеОпытаРаботы()
-Календарь ПросмотрКалендаря()
-Сессия Сессия()
-void ПросмотрЗаписи(Сессия session)
}

class Администратор {
-void ПросмотрЗаявок()
-void РассмотретьЗаявку(Заявка &form, String answer)
-Администратор ДобавитьАдминистратора()
-Копирайтер ДобавитьКопирайтера()
-Психолог ДобавитьПсихолога()
-void РедактированиеПсихолога()
-void ПросмотрЗаявок()
-Пользователь АктивироватьПользователя(Пользователь user)
}

class БанковскаяКарта {
-String IDБанка
-String Банк
-Апишка
}

class bankApi
note top: Это библиотека для работы с банковскими счетами

class VideoApi
note top: Это библиотека для работой с видеозвонками

class Сессия {
-Id ID
-Date Дата
-Id Клиент
-Id Психолог
-MP4 Запись
-Отзыв Отзыв
-Заявка Заявка
-bool Окончание_сессии
-int Цена

-Date getДата()
-Id getКлиент()
-Id getПсихолог()
-MP4 getЗапись()
-Отзыв getОтзыв()
-Заявка getЗаявка()
-void setОтзыв(Отзыв form)
-void setЗаявка(Заявка form)
-Отзыв ОставитьОтзыв()
-Заявка СоздатьЗаявку()
-void НачатьСессию()
-void ЗакончитьСессию()
}
VideoApi <|.. Сессия
Клиент "1"--"*" Запись
Клиент "*"--"*" Психолог
Клиент "1"--"1" Сессия
Психолог "1"--"1" Сессия
Календарь "1"*--"many" Запись
Клиент ..> Теги
Психолог ..> Теги
Клиент "1"--"1" Календарь
Психолог "1"--"1" Календарь
Сессия "1"*-up-"1" Отзыв
Отзыв "1"*--"1" Заявка
Клиент "1"*--"1" Счет
Копирайтер "1"--"*" Статья
Клиент "1" -- "1" Отзыв
Администратор "1" -- "*" Заявка
Психолог "1" -- "1" Отзыв
Сессия "1" -- "1" Оплата
Оплата o--Счет
Оплата o-- БанковскаяКарта
bankApi <|.. БанковскаяКарта

Пользователь <|-- Копирайтер
Пользователь <|-- Психолог
Пользователь <|-- Клиент
Пользователь <|-- Администратор

ЗаявкаРаботника <|-- ЗаявкаКопирайтера
ЗаявкаРаботника <|-- ЗаявкаПсихолога
ЗаявкаРаботника <|-- ЗаявкаАдминистратора
@enduml